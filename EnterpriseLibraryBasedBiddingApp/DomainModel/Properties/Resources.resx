<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BidMustBeGreaterThanLastBid" xml:space="preserve">
    <value>Bid Must Be Greater Than Last Bid</value>
  </data>
  <data name="BidMustHaveProduct" xml:space="preserve">
    <value>bid must have product</value>
  </data>
  <data name="BidMustHaveUser" xml:space="preserve">
    <value>bid must have user</value>
  </data>
  <data name="BidSumMustBeGreaterThan1Message" xml:space="preserve">
    <value>Bid sum must be greater than 1.</value>
  </data>
  <data name="BidSumMustBeGreaterThanProductStartingPrice" xml:space="preserve">
    <value>Bid must be greater than product starting price.</value>
  </data>
  <data name="BidSumMustBeSmallerThan999999Message" xml:space="preserve">
    <value>Bid sum must be smaller than 999999.</value>
  </data>
  <data name="CategoryCantHaveSoManyProductInBdidding" xml:space="preserve">
    <value>CategoryCantHaveSoManyProductInBdidding</value>
  </data>
  <data name="CategoryNameLength" xml:space="preserve">
    <value>Category name cannot contain more than 20 characters.</value>
  </data>
  <data name="DescriptionToLong" xml:space="preserve">
    <value>Description To Long</value>
  </data>
  <data name="InvalidCategoryName" xml:space="preserve">
    <value>Invalid category name!</value>
  </data>
  <data name="InvalidDescription" xml:space="preserve">
    <value>Invalid Description</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>invalid user name</value>
  </data>
  <data name="InvalidUserPassword" xml:space="preserve">
    <value>invalid user  password</value>
  </data>
  <data name="NewProductBidMustBeGreaterThanLastOneMessage" xml:space="preserve">
    <value>The product bid must be greater than the last bid.</value>
  </data>
  <data name="ProductBidCurrencyInvalid" xml:space="preserve">
    <value>Product bid currency invalid.</value>
  </data>
  <data name="ProductBidCurrencyMaxLenght" xml:space="preserve">
    <value>Product bid currency max length exceeded: 20.</value>
  </data>
  <data name="ProductEndDateCantBeSetInPastTimeMessage" xml:space="preserve">
    <value>Product bidding end date can't be set in the past.</value>
  </data>
  <data name="ProductEndDateMustBeGreaterThanStartDateMessage" xml:space="preserve">
    <value>Product bidding end date must be greater than start date.</value>
  </data>
  <data name="ProductInvalidCategory" xml:space="preserve">
    <value>Invalid category for product.</value>
  </data>
  <data name="ProductMustHaveAnOwner" xml:space="preserve">
    <value>Product Must Have An Owner</value>
  </data>
  <data name="ProductNameInvalid" xml:space="preserve">
    <value>Product Name Invalid</value>
  </data>
  <data name="ProductNameMaxLength" xml:space="preserve">
    <value>Product name less than 20 char.</value>
  </data>
  <data name="ProductNotAvailableForBidding" xml:space="preserve">
    <value>Product Not Available For Bidding</value>
  </data>
  <data name="ProductStartDateCantBeSetInPastTimeMessage" xml:space="preserve">
    <value>Product bidding start date can't be set in the past.</value>
  </data>
  <data name="ProductStartingPriceMustBeGreaterThanZeroMessage" xml:space="preserve">
    <value>Product starting price must be greater than 0.</value>
  </data>
  <data name="ProductStartingPriceMustBeLowerThan1000000Message" xml:space="preserve">
    <value>Product starting price must be lower than 1000000.</value>
  </data>
  <data name="RatingCannotBeMoreThan10" xml:space="preserve">
    <value>RatingCannotBeMoreThan10</value>
  </data>
  <data name="RatingDescriptionToLong" xml:space="preserve">
    <value>RatingDescriptionToLong</value>
  </data>
  <data name="RatingMustBePositiveNumber" xml:space="preserve">
    <value>RatingMustBePositiveNumber</value>
  </data>
  <data name="RatingMustContainADescription" xml:space="preserve">
    <value>RatingMustContainADescription</value>
  </data>
  <data name="RatingMustHaveAssociatedUser" xml:space="preserve">
    <value>RatingMustHaveAssociatedUser</value>
  </data>
  <data name="RoleDescriptionCannotBeEmpty" xml:space="preserve">
    <value>RoleDescriptionCannotBeEmpty</value>
  </data>
  <data name="RoleDescriptionToLong" xml:space="preserve">
    <value>RoleDescriptionToLong</value>
  </data>
  <data name="RoleNameCannotBeEmpty" xml:space="preserve">
    <value>RoleNameCannotBeEmpty</value>
  </data>
  <data name="RoleNameToLong" xml:space="preserve">
    <value>RoleNameToLong</value>
  </data>
  <data name="UserCantHaveSomeManyProductInBidding" xml:space="preserve">
    <value>User Cant Have Some Many Product In Bidding</value>
  </data>
  <data name="UserHasNoSuchProduct" xml:space="preserve">
    <value>User Has No Such Product</value>
  </data>
  <data name="UserIsBanndAndCannotBid" xml:space="preserve">
    <value>UserIsBanndAndCannotBid</value>
  </data>
  <data name="UserIsBanned" xml:space="preserve">
    <value>UserIsBanned</value>
  </data>
  <data name="UserMustHaveARole" xml:space="preserve">
    <value>UserMustHaveARole</value>
  </data>
  <data name="UserNameToLong" xml:space="preserve">
    <value>User name to long</value>
  </data>
  <data name="UserPasswordToLong" xml:space="preserve">
    <value>user passowrd to long</value>
  </data>
</root>